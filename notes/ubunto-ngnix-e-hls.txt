rtmp {
    server {
        listen 1935;
        chunk_size 4096;  # Tamanho do chunk para RTMP

        application live {
            live on;
            interleave on;  # Intercalar áudio e vídeo
            record off;     # Desativar gravação

            # Configurações HLS
            hls on;
            hls_path /tmp/hls;  # Caminho para os arquivos HLS
            hls_fragment 15s;   # Duração do fragmento HLS
        }
    }
}

http { 
    server {
        listen 8080;  # Porta HTTP

        location / {
            root html;
            index index.html index.htm;
        }

        location /live {
        
        }
    }
}


HLS é a sigla para HTTP Live Streaming, um protocolo de streaming de vídeo que permite transmitir conteúdo de alta qualidade: 



O HLS é um protocolo adaptável, ou seja, a qualidade do vídeo pode aumentar ou diminuir dependendo da condição da rede. 

O HLS é compatível com dispositivos móveis, como Android e iOS, e com navegadores da web. 

O HLS é amplamente adotado por ser confiável, escalável e compatível. 
O HLS foi desenvolvido pela Apple, mas atualmente é usado em uma ampla variedade de dispositivos.

O HLS funciona dividindo o fluxo de vídeo em pequenos downloads de arquivos baseados em HTTP. Os dispositivos clientes carregam esses arquivos HTTP e os reproduzem em forma de vídeo. 

O HLS usa a codificação H.264 ou H.265 para reformatar os dados de vídeo, de modo que outros dispositivos possam reconhecer e interpretá-los. 

O HLS é um dos protocolos de transmissão de vídeo mais amplamente utilizados. Ele oferece capacidades de transmissão a pedido e em direto. 

fonte: google


CODIGO 2v

rtmp {
    server {
        listen 1935;  # Porta para RTMP
        chunk_size 4096;  # Tamanho do chunk para RTMP

        application live {
            live on;  # Habilita o streaming ao vivo
            interleave on;  # Intercalar áudio e vídeo
            record off;  # Desativar gravação

            # Configurações HLS
            hls on;  # Habilita HLS (HTTP Live Streaming)
            hls_path /tmp/hls;  # Caminho para os arquivos HLS
            hls_fragment 15s;  # Duração do fragmento HLS
        }
    }
}

http {
    server {
        listen 8080;  # Porta HTTP

        location / {
            root /home/usuario/GitHub/radio-ddp/public;

            index index.html index.htm;  # Arquivos padrão a serem carregados
        }

        location /live {
            # Serve os streams ao vivo
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;  # Caminho onde os arquivos HLS são armazenados
        }
    }
}


COMANDO NO UBUNTO PARA A CONF DO NGINX //////////////////////////////////
sudo nano /etc/nginx/nginx.conf





CODIGO VF

rtmp {
    server {
        listen 1935;  
        chunk_size 4096;  

        application live {
            live on;  
            interleave on;  
            record off; 

            # Configurações HLS
            hls on; 
            hls_path /tmp/hls; 
            hls_fragment 15s; 
        }
    }
}

http {
    server {
        listen 8080;  

        location / {
            root /home/usuario/GitHub/radio-ddp/public;
            index index.html index.htm; 
        }

        location /live {
            
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;  
        }
    }
}

server {
    server_name radios.ddp www.radios.ddp;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }



server {
        listen 8080;  
        
        location / {
            root /home/usuario/GitHub/radio-ddp/public;
            index index.html index.htm; 
        }
        
        location /live {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;  
        }
    }



rtmp://localhost/live

   iniciar p NGINX:: ////////////////////////////////////////////////

   sudo systemctl start nginx













CONFIGURAÇÃO DO NGINX NO UBUNTO


user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

rtmp {
 server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            interleave on;
            record off;
            hls on;
            hls_path /tmp/hls;
            hls_fragment 15s;
            hls_playlist_length 60;
        }
    }
}

http {
        server {
           listen 8080;

           location / {
               root /usr/share/nginx/html;
               index index.html index.htm;
           }

           location /live {
               types {
                   application/vnd.apple.mpegurl m3u8; arquivos .m3u8
                   video/mp2t ts;
               }
               alias /tmp/hls;
                add_header Cache-Control no-cache;
                add_header 'Access-Control-Allow-Origin' '*';
           }
       }

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/x>

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}


280125 {

server {
        listen 8080;  
        server_name radios.ddp www.radios.ddp;

        location / {
            root /home/usuario/GitHub/radio-ddp/public;
            index index.html index.htm; 
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /live {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;  
        }
    }






}









































////////   /
/          /
/          /
/          /
/          
////////   /









COMANDOs NGINX/////////////// ///////////////// /////////////// ///////////// ///////

sudo systemctl start nginx 

sudo systemctl status nginx

sudo systemctl enable nginx 
(Esse comando garante que o Nginx seja iniciado automaticamente toda vez que o sistema for reiniciado.)

sudo systemctl stop nginx

sudo nano /etc/nginx/nginx.conf

sudo nano /usr/local/nginx/conf/nginx.conf

sudo chmod -R 755 /tmp/hls
(Verificação de Permissões: Certifique-se de que o Nginx tem permissão para escrever na pasta /tmp/hls. Você pode fazer isso executando um comando como)

sudo systemctl restart nginx

ls /tmp/hls

/usr/local/nginx/sbin/nginx -V


A mensagem "lines 1-15/15 (END)" indica que você está dentro de um visualizador de texto, como o less ou more, que é usado para mostrar a saída de comandos que geram mais texto do que pode ser exibido de uma só vez.

Para sair desse modo e voltar ao terminal, você pode pressionar a tecla q. Isso deve fechar o visualizador e permitir que você digite novos comandos no terminal.

Resumo dos Comandos:
Pressione q: Para sair do visualizador e voltar ao terminal.
Se você estiver usando um comando que gera muita saída e deseja visualizar a saída de uma forma que não entre em um visualizador, você pode redirecionar a saída para um arquivo ou usar grep para filtrar a saída. Por exemplo:

bash
sudo systemctl status nginx | less

Ou, se você quiser ver apenas algumas linhas, pode usar head ou tail:

bash
sudo systemctl status nginx | head -n 10

Isso mostrará apenas as primeiras 10 linhas da saída. Se precisar de mais ajuda, é só avisar!




rtmp://localhost/live



404 Not Found
nginx/1.24.0 (Ubuntu)









O fluxo HLS seria o próprio vídeo?
Sim, o fluxo HLS (HTTP Live Streaming) é uma forma de transmitir vídeo pela internet. Quando você transmite um vídeo usando o OBS para um servidor RTMP, o servidor gera arquivos HLS (como .m3u8 e .ts) que podem ser acessados via HTTP. Esses arquivos representam o próprio vídeo que está sendo transmitido.







server {
           listen 8080;

           location / {
               root /usr/share/nginx/html;  
               index index.html index.htm;
           }

           location /live {
               types {
                   application/vnd.apple.mpegurl m3u8; arquivos .m3u8
                   video/mp2t ts; 
               }
               alias /tmp/hls;  # Use alias para apontar diretamente para /tmp/hls
               add_header Cache-Control no-cache; 
           }
       }









//////////////////////////////////////////////////////////////////////




       http://localhost:8080/live/radio_ddp.m3u8 abri o link e ele fez um download de um arquivo radio_ddp.m3u8, o que sera que acontreceu?






       root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.24.0# /usr/local/nginx/sbin/nginx -V
nginx version: nginx/1.24.0
built by gcc 13.3.0 (Ubuntu 13.3.0-6ubuntu2~24.04)
built with OpenSSL 3.0.13 30 Jan 2024
TLS SNI support enabled
configure arguments: --with-http_ssl_module --add-module=../nginx-rtmp-module
root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.24.0#








NOVOS COMANDOs
////////////////////////////////////////// ///////////  ///////////////////////////


Iniciar o Nginx:
Para iniciar o Nginx, você deve usar o comando que aponta diretamente para o executável do Nginx:
bash


sudo /usr/local/nginx/sbin/nginx

cd /usr/local/src
sudo wget http://nginx.org/download/nginx-1.27.1.tar.gz  # Substitua pela versão mais recente
sudo tar -zxvf nginx-1.27.1.tar.gz

cd nginx-1.27.1 
sudo ./configure --with-http_ssl_module --add-module=../nginx-rtmp-module
sudo make
sudo make install



hostname -I
172.28.180.183




















140125

/usr/local/nginx/conf/nginx.conf ou /etc/nginx/nginx.conf

/etc/nginx/nginx.conf: Este é o arquivo de configuração padrão para o Nginx quando ele é instalado usando um gerenciador de pacotes (como apt no Ubuntu). Ele geralmente é a versão que está sendo gerenciada pelo sistema, e pode estar rodando como um serviço do sistema.


/usr/local/nginx/conf/nginx.conf: Este é o arquivo de configuração para a versão do Nginx que você compilou a partir do código-fonte. Quando você compila o Nginx manualmente, ele é instalado nesse diretório por padrão.



The media could not be loaded, either because the server or network failed or because the format is not supported.







Parece que você já tem uma configuração de servidor Nginx que está escutando na porta 8080 e tem uma localização configurada para /live, que é onde os arquivos HLS estão sendo servidos. Vamos analisar a configuração e ver como você pode ajustá-la para garantir que o streaming HLS funcione conforme esperado.

Análise da Configuração Atual
Escuta na Porta 8080:


Seu servidor está configurado para escutar na porta 8080. Isso significa que você deve acessar o stream usando http://localhost:8080/live/radio_ddp.m3u8 (ou o IP do servidor se estiver acessando de outro dispositivo).

Localização /live:


Você tem uma localização configurada para /live, que define os tipos MIME para arquivos .m3u8 e .ts.
O comando alias /tmp/hls; indica que os arquivos HLS estão localizados na pasta /tmp/hls.

Ajustes Sugeridos
Se tudo está funcionando conforme esperado, você pode não precisar fazer alterações. No entanto, aqui estão algumas sugestões para garantir que tudo funcione corretamente:

Verifique se os Arquivos HLS Estão Acessíveis:
Tente acessar diretamente o arquivo .m3u8 pelo navegador usando a URL http://localhost:8080/live/radio_ddp.m3u8. Você deve ver o conteúdo do arquivo M3U8.
Se você não conseguir acessar, verifique os logs do Nginx para mensagens de erro:

bash


sudo tail -f /var/log/nginx/error.log
Verifique o Caminho dos Arquivos:


Certifique-se de que os arquivos .ts e o arquivo .m3u8 estão realmente no diretório /tmp/hls e que o Nginx tem permissões para acessá-los.

Ajuste a Configuração, se Necessário:


Se você quiser mudar o caminho de /live para /hls, você pode ajustar a configuração da seguinte forma:



nginx
   http {
       server {
           listen 8080;
           location / {
               root /usr/share/nginx/html;
               index index.html index.htm;
           }
           location /hls {
               types {
                   application/vnd.apple.mpegurl m3u8;
                   video/mp2t ts;
               }
               alias /tmp/hls;  # Diretório onde os arquivos HLS estão localizados
               add_header Cache-Control no-cache;
           }
       }
   }
Reinicie o Nginx:
Após fazer alterações na configuração, não se esqueça de reiniciar o Nginx para que as mudanças tenham efeito:

bash


sudo /usr/local/nginx/sbin/nginx -s reload
Conclusão
Com a configuração atual, você deve ser capaz de acessar seus arquivos HLS através da URL http://localhost:8080/live/radio_ddp.m3u8. Se você tiver mais perguntas ou precisar de mais assistência, sinta-se à vontade para perguntar!




rtmp://localhost:1935/live chave radio_ddp

http://localhost:8080/live/radio_ddp.m3u8


























events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            interleave on;
            record off;

            # Configurações HLS
            hls on;
            hls_path /tmp/hls;
            hls_fragment 15s;
        }
    }
}

http {

        server {
        listen 8080;
        server_name radios.ddp www.radios.ddp;

        location / {
            root /home/usuario/GitHub/radio-ddp/public;
            index index.html index.htm;
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /live {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;
        }
    }
}    