rtmp {
    server {
        listen 1935;
        chunk_size 4096;  # Tamanho do chunk para RTMP

        application live {
            live on;
            interleave on;  # Intercalar áudio e vídeo
            record off;     # Desativar gravação

            # Configurações HLS
            hls on;
            hls_path /tmp/hls;  # Caminho para os arquivos HLS
            hls_fragment 15s;   # Duração do fragmento HLS
        }
    }
}

http { 
    server {
        listen 8080;  # Porta HTTP

        location / {
            root html;
            index index.html index.htm;
        }

        location /live {
        
        }
    }
}


HLS é a sigla para HTTP Live Streaming, um protocolo de streaming de vídeo que permite transmitir conteúdo de alta qualidade: 



O HLS é um protocolo adaptável, ou seja, a qualidade do vídeo pode aumentar ou diminuir dependendo da condição da rede. 

O HLS é compatível com dispositivos móveis, como Android e iOS, e com navegadores da web. 

O HLS é amplamente adotado por ser confiável, escalável e compatível. 
O HLS foi desenvolvido pela Apple, mas atualmente é usado em uma ampla variedade de dispositivos.

O HLS funciona dividindo o fluxo de vídeo em pequenos downloads de arquivos baseados em HTTP. Os dispositivos clientes carregam esses arquivos HTTP e os reproduzem em forma de vídeo. 

O HLS usa a codificação H.264 ou H.265 para reformatar os dados de vídeo, de modo que outros dispositivos possam reconhecer e interpretá-los. 

O HLS é um dos protocolos de transmissão de vídeo mais amplamente utilizados. Ele oferece capacidades de transmissão a pedido e em direto. 

fonte: google


CODIGO 2v

rtmp {
    server {
        listen 1935;  # Porta para RTMP
        chunk_size 4096;  # Tamanho do chunk para RTMP

        application live {
            live on;  # Habilita o streaming ao vivo
            interleave on;  # Intercalar áudio e vídeo
            record off;  # Desativar gravação

            # Configurações HLS
            hls on;  # Habilita HLS (HTTP Live Streaming)
            hls_path /tmp/hls;  # Caminho para os arquivos HLS
            hls_fragment 15s;  # Duração do fragmento HLS
        }
    }
}

http {
    server {
        listen 8080;  # Porta HTTP

        location / {
            root /home/usuario/GitHub/radio-ddp/public;

            index index.html index.htm;  # Arquivos padrão a serem carregados
        }

        location /live {
            # Serve os streams ao vivo
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;  # Caminho onde os arquivos HLS são armazenados
        }
    }
}


COMANDO NO UBUNTO PARA A CONF DO NGINX //////////////////////////////////
sudo nano /etc/nginx/nginx.conf





CODIGO VF

rtmp {
    server {
        listen 1935;  
        chunk_size 4096;  

        application live {
            live on;  
            interleave on;  
            record off; 

            # Configurações HLS
            hls on; 
            hls_path /tmp/hls; 
            hls_fragment 15s; 
        }
    }
}

http {
    server {
        listen 8080;  

        location / {
            root /home/usuario/GitHub/radio-ddp/public;
            index index.html index.htm; 
        }

        location /live {
            
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp/hls;  
        }
    }
}


   rtmp://localhost/live

   iniciar p NGINX:: ////////////////////////////////////////////////

   sudo systemctl start nginx



CONFIGURAÇÃO DO NGINX NO UBUNTO


user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

rtmp {
 server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            interleave on;
            record off;
            hls on;
            hls_path /tmp/hls;
            hls_fragment 15s;
        }
    }
}

http {
        server {
           listen 8080;

           location / {
               root /usr/share/nginx/html;
               index index.html index.htm;
           }

           location /live {
               types {
                   application/vnd.apple.mpegurl m3u8; arquivos .m3u8
                   video/mp2t ts;
               }
               alias /tmp/hls;
                add_header Cache-Control no-cache;
           }
       }

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/x>

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}























////////   /
/          /
/          /
/          /
/          
////////   /









COMANDOs NGINX/////////////// ///////////////// /////////////// ///////////// ///////

sudo systemctl start nginx 

sudo systemctl status nginx

sudo systemctl enable nginx 
(Esse comando garante que o Nginx seja iniciado automaticamente toda vez que o sistema for reiniciado.)

sudo systemctl stop nginx

sudo nano /etc/nginx/nginx.conf

sudo chmod -R 755 /tmp/hls
(Verificação de Permissões: Certifique-se de que o Nginx tem permissão para escrever na pasta /tmp/hls. Você pode fazer isso executando um comando como)

sudo systemctl restart nginx

ls /tmp/hls


A mensagem "lines 1-15/15 (END)" indica que você está dentro de um visualizador de texto, como o less ou more, que é usado para mostrar a saída de comandos que geram mais texto do que pode ser exibido de uma só vez.

Para sair desse modo e voltar ao terminal, você pode pressionar a tecla q. Isso deve fechar o visualizador e permitir que você digite novos comandos no terminal.

Resumo dos Comandos:
Pressione q: Para sair do visualizador e voltar ao terminal.
Se você estiver usando um comando que gera muita saída e deseja visualizar a saída de uma forma que não entre em um visualizador, você pode redirecionar a saída para um arquivo ou usar grep para filtrar a saída. Por exemplo:

bash
sudo systemctl status nginx | less

Ou, se você quiser ver apenas algumas linhas, pode usar head ou tail:

bash
sudo systemctl status nginx | head -n 10

Isso mostrará apenas as primeiras 10 linhas da saída. Se precisar de mais ajuda, é só avisar!




rtmp://localhost/live



404 Not Found
nginx/1.24.0 (Ubuntu)









O fluxo HLS seria o próprio vídeo?
Sim, o fluxo HLS (HTTP Live Streaming) é uma forma de transmitir vídeo pela internet. Quando você transmite um vídeo usando o OBS para um servidor RTMP, o servidor gera arquivos HLS (como .m3u8 e .ts) que podem ser acessados via HTTP. Esses arquivos representam o próprio vídeo que está sendo transmitido.






server {
           listen 8080;

           location / {
               root /usr/share/nginx/html;  
               index index.html index.htm;
           }

           location /live {
               types {
                   application/vnd.apple.mpegurl m3u8; arquivos .m3u8
                   video/mp2t ts; 
               }
               alias /tmp/hls;  # Use alias para apontar diretamente para /tmp/hls
               add_header Cache-Control no-cache; 
           }
       }









//////////////////////////////////////////////////////////////////////




       http://localhost:8080/live/radio_ddp.m3u8 abri o link e ele fez um download de um arquivo radio_ddp.m3u8, o que sera que acontreceu?






       root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.24.0# /usr/local/nginx/sbin/nginx -V
nginx version: nginx/1.24.0
built by gcc 13.3.0 (Ubuntu 13.3.0-6ubuntu2~24.04)
built with OpenSSL 3.0.13 30 Jan 2024
TLS SNI support enabled
configure arguments: --with-http_ssl_module --add-module=../nginx-rtmp-module
root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.24.0#








NOVOS COMANDOs
////////////////////////////////////////// ///////////  ///////////////////////////


Iniciar o Nginx:
Para iniciar o Nginx, você deve usar o comando que aponta diretamente para o executável do Nginx:
bash


sudo /usr/local/nginx/sbin/nginx

cd /usr/local/src
sudo wget http://nginx.org/download/nginx-1.27.1.tar.gz  # Substitua pela versão mais recente
sudo tar -zxvf nginx-1.27.1.tar.gz

cd nginx-1.27.1 
sudo ./configure --with-http_ssl_module --add-module=../nginx-rtmp-module
sudo make
sudo make install



hostname -I
172.28.180.183












root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.27.1# sudo killall nginx
nginx: no process found
Passo 2: Verificar se o Nginx foi Parado
Depois de executar o comando acima, verifique se não há mais processos do Nginx em execução:
bash
ps aux | grep nginx
root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.27.1# ps aux | grep nginx
root        4978  0.0  0.0  14144  6836 pts/0    T    15:09   0:00 sudo systemctl status nginx
root        4979  0.0  0.0  14144  1196 pts/2    Ss   15:09   0:00 sudo systemctl status nginx
root        4980  0.0  0.0  14772  6228 pts/2    T+   15:09   0:00 systemctl status nginx
root        5143  0.0  0.0   4088  2056 pts/0    S+   16:19   0:00 grep --color=auto nginx
root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.27.1# o erro não esta em ":/usr/local/src/nginx-1.27.1?"
sudo systemctl status nginx 
root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.27.1# sudo systemctl status nginx
× nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/etc/systemd/system/nginx.service; disabled; preset: enabled)
     Active: failed (Result: exit-code) since Mon 2025-01-13 16:18:37 -03; 2min 30s ago
   Duration: 54min 57.789s
    Process: 5058 ExecStart=/usr/local/nginx/sbin/nginx (code=exited, status=0/SUCCESS)
    Process: 5137 ExecStop=/bin/kill -s TERM $MAINPID (code=exited, status=1/FAILURE)
   Main PID: 5059 (code=exited, status=0/SUCCESS)
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:  -<signal>, -s, --signal <signal>
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:                         specify the <signal> to be sent
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:  -q, --queue <value>    integer value to be sent with the signal
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:  -l, --list=[<signal>]  list all signal names, or convert one to a name
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:  -L, --table            list all signal names in a nice table
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:  -h, --help     display this help and exit
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]:  -V, --version  output version information and exit
Jan 13 16:18:37 DESKTOP-MESQUITA kill[5137]: For more details see kill(1).
Jan 13 16:18:37 DESKTOP-MESQUITA systemd[1]: nginx.service: Control process exited, code=exited, status=1/FAILURE
Jan 13 16:18:37 DESKTOP-MESQUITA systemd[1]: nginx.service: Failed with result 'exit-code'.
root@DESKTOP-MESQUITA:/usr/local/src/nginx-1.27.1#
outra pergunta, se ja esta tendo o nginx me mande comandos para usar o nginx