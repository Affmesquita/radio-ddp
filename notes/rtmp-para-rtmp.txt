Question :

rtmp://localhost:1935/live/radio_ddp é o link que vai transmitir esse link aqui? rtmp://localhost:1935/live , no campo Stream Key, insira radio_ddp?
Answer :



Exatamente! O link rtmp://localhost:1935/live/radio_ddp é a combinação do URL do servidor RTMP e a chave da stream (Stream Key).

Detalhes:
URL do Servidor: rtmp://localhost:1935/live
Stream Key: radio_ddp
Como Funciona:
URL do Servidor (rtmp://localhost:1935/live): Este é o endereço do seu servidor Nginx que está configurado para aceitar transmissões RTMP na porta 1935, na aplicação chamada live.


Stream Key (radio_ddp): Este é o identificador da sua transmissão específica. Quando você insere isso no OBS, ele combina a Stream Key com o URL do servidor para formar o URL completo que você usará para transmitir.


Configuração no OBS:
Server: Insira rtmp://localhost:1935/live.
Stream Key: Insira radio_ddp.
Assim, quando você iniciar a transmissão no OBS, ele enviará o fluxo para rtmp://localhost:1935/live/radio_ddp.

Testando a Transmissão:
Após configurar o OBS e iniciar a transmissão, você pode verificar se está funcionando corretamente usando um player que suporte RTMP, como o VLC:

Abra o VLC.
Vá para Media > Open Network Stream.
Insira o URL rtmp://localhost:1935/live/radio_ddp.
Clique em Play.
Se tudo estiver configurado corretamente, você deverá ver sua transmissão ao vivo.

Se você tiver mais perguntas ou precisar de mais assistência, fique à vontade para perguntar!







rtmp {
 server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            interleave on;
            record off;
            hls on;
            hls_path /tmp/hls;
            hls_fragment 15s;
        }
    }
}

http {
        server {
           listen 8080;

           location / {
               root /usr/share/nginx/html;
               index index.html index.htm;
           }

           location /live {
               types {
                   application/vnd.apple.mpegurl m3u8; arquivos .m3u8
                   video/mp2t ts;
               }
               alias /tmp/hls;
                add_header Cache-Control no-cache;
           }
    
           }   }